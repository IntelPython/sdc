parameters:
  name: ''
  vmImage: ''
  allowFailure: ''
  matrix: []

jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 120
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    maxParallel: 11
    matrix:
      ${{ insert }}: ${{ parameters.matrix }}

  steps:
    - script: |
        chmod 777 buildscripts/install_conda.sh
        buildscripts/install_conda.sh $HOME/miniconda3
      displayName: 'Install conda'

    - script: |
        source $HOME/miniconda3/bin/activate
        python buildscripts/build.py --python=$PYTHON_VER --numpy=$NUMPY_VER
      displayName: 'Build Intel SDC'
      continueOnError: ${{ parameters.allowFailure }}

    - script: |
        source $HOME/miniconda3/bin/activate
        python buildscripts/test.py --python=$PYTHON_VER --sdc-channel=./sdc-build
      displayName: 'Test Intel SDC conda package'
      continueOnError: ${{ parameters.allowFailure }}

# TODO: unskip when all the DataFrame groupby methods are optimized
#    - script: |
#        source $HOME/miniconda3/bin/activate
#        python buildscripts/run_examples.py --python=$PYTHON_VER --sdc-channel=./sdc-build
#      displayName: 'Run Intel SDC examples'
#      continueOnError: ${{ parameters.allowFailure }}

    - script: |
        source $HOME/miniconda3/bin/activate
        python buildscripts/build_doc.py --python=$PYTHON_VER --sdc-channel=./sdc-build
      displayName: 'Build Intel SDC documentation'
      continueOnError: ${{ parameters.allowFailure }}
