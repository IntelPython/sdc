parameters:
  name: ''
  vmImage: ''
  allowFailure: ''
  matrix: []

jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 120
  pool: 
    vmImage: ${{ parameters.vmImage }}
  strategy:
    maxParallel: 11
    matrix:
      ${{ insert }}: ${{ parameters.matrix }}

  steps:
    # - script: |
    #     buildscripts\\install_conda.bat "%UserProfile%\\Miniconda3"
    #   displayName: 'Install conda'

    - script: |
        call C:\\Miniconda\\Scripts\\activate.bat
        python buildscripts\\build.py --python=%PYTHON_VER% --numpy=%NUMPY_VER%
      displayName: 'Build Intel SDC'
      continueOnError: ${{ parameters.allowFailure }}

    - script: |
        call C:\\Miniconda\\Scripts\\activate.bat
        python buildscripts\\test.py --python=%PYTHON_VER% --sdc-channel=.\\sdc-build
      displayName: 'Test Intel SDC conda package'
      continueOnError: ${{ parameters.allowFailure }}

# TODO: unskip when new DataFrame structure is ready
#    - script: |
#        call C:\\Miniconda\\Scripts\activate.bat
#        python buildscripts\\run_examples.py --python=%PYTHON_VER% --sdc-channel=.\\sdc-build
#      displayName: 'Run Intel SDC examples'
#      continueOnError: ${{ parameters.allowFailure }}
