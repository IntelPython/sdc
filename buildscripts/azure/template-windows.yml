parameters:
  name: ''
  vmImage: ''
  allowFailure: ''
  matrix: []

jobs:
- job: ${{ parameters.name }}
  timeoutInMinutes: 120
  pool: 
    vmImage: ${{ parameters.vmImage }}
  strategy:
    maxParallel: 11
    matrix:
      ${{ insert }}: ${{ parameters.matrix }}

  steps:
    # - script: |
    #     buildscripts\\install_conda.bat "%UserProfile%\\Miniconda3"
    #   displayName: 'Install conda'

    - script: |
        call C:\\Miniconda\\Scripts\\activate.bat
        python buildscripts\\build.py --python=%PYTHON_VER% --numpy=%NUMPY_VER%
      displayName: 'Build Intel SDC'
      continueOnError: ${{ parameters.allowFailure }}

    - script: |
        IF "%USE_NUMBA_MASTER%" == "False" (
            "C:\\Miniconda\\python.exe" buildscripts\\test.py --test-mode=conda --python=%PYTHON_VER% --numpy=%NUMPY_VER% --conda-prefix="C:\\Miniconda"
            ) ELSE (
            "C:\\Miniconda\\python.exe" buildscripts\\test.py --test-mode=conda --python=%PYTHON_VER% --numpy=%NUMPY_VER% --use-numba-master --conda-prefix="C:\\Miniconda")
      displayName: 'Test conda package'
      continueOnError: ${{ parameters.allowFailure }}

    - script: |
        IF "%USE_NUMBA_MASTER%" == "False" (
            "C:\\Miniconda\\python.exe" buildscripts\\test.py --test-mode=examples --python=%PYTHON_VER% --numpy=%NUMPY_VER% --conda-prefix="C:\\Miniconda"
            ) ELSE (
            "C:\\Miniconda\\python.exe" buildscripts\\test.py --test-mode=examples --python=%PYTHON_VER% --numpy=%NUMPY_VER% --use-numba-master --conda-prefix="C:\\Miniconda")
      displayName: 'Test package examples'
      continueOnError: ${{ parameters.allowFailure }}
